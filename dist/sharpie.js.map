{"version":3,"sources":["webpack://Sharpie/webpack/universalModuleDefinition","webpack://Sharpie/webpack/bootstrap","webpack://Sharpie/./src/highlight.ts","webpack://Sharpie/./src/html.ts","webpack://Sharpie/./src/index.ts","webpack://Sharpie/./src/util.ts"],"names":[],"mappings":"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","file":"sharpie.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sharpie\"] = factory();\n\telse\n\t\troot[\"Sharpie\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {_debug} from \"./util\";\n\n/**\n * Track container elements where selection events can be handled.\n */\nconst watchList = new Map<HTMLElement, Set<Function>>();\n\n/**\n * Get the handlers to execute for the given child based on its container.\n *\n * Might return undefined if no container under watch contains the node.\n */\nfunction getWatchHandlers(childNode: Node) {\n  for (const el of watchList.keys()) {\n    if (el.contains(childNode)) {\n      return watchList.get(el);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the handlers to execute for the given watched container.\n *\n * TODO(jnu): currently selections that overflow a single watched parent in\n * any way will be ignored entirely. These edge cases could be handled in\n * other ways in the future.\n */\nfunction resolveHandlers(selection: Selection) {\n  const anchorCBs = getWatchHandlers(selection.anchorNode);\n  if (!anchorCBs) {\n    _debug(\"Selection starts outside of watched container\");\n    return undefined;\n  }\n\n  const focusCBs = getWatchHandlers(selection.focusNode);\n  if (!focusCBs) {\n    _debug(\"Selection ends outside of watched container\");\n    return undefined;\n  }\n\n  if (anchorCBs !== focusCBs) {\n    _debug(\"Selection spans multiple watched containers\");\n    return undefined;\n  }\n\n  return anchorCBs;\n}\n\n/**\n * Get the most immediate Sharpie parent container.\n */\nfunction getSharpieOffsetParent(container: Node): HTMLElement | undefined {\n  let el = container;\n  // TODO(jnu): use more immediate anchor to short-circuit search\n  const root = document.body;\n  while (el && el !== root) {\n    // @ts-ignore\n    if (el.dataset && el.dataset.hasOwnProperty(\"sharpieStart\")) {\n      return el as HTMLElement;\n    }\n    el = el.parentElement;\n  }\n\n  return undefined;\n}\n\n/**\n * Get the nearest preceding Sharpie element.\n */\nfunction getSharpieSibling(container: Node): HTMLElement | undefined {\n  // @ts-ignore\n  let el = container;\n  while (el) {\n    // @ts-ignore\n    if (el.dataset && el.dataset.hasOwnProperty(\"sharpieStart\")) {\n      return el as HTMLElement;\n    }\n    // @ts-ignore\n    el = el.previousElementSibling;\n  }\n  return undefined;\n}\n\n/**\n * Get offset of the given node.\n *\n * Uses contextual hints from surrounding elements.\n */\nfunction getSharpieOffset(el: Node) {\n  const sharpieContainer = getSharpieOffsetParent(el);\n  const sharpieSibling = getSharpieSibling(el);\n  const rawPos = sharpieSibling ?\n    sharpieSibling.dataset.sharpieEnd :\n    sharpieContainer.dataset.sharpieStart;\n  const rawWarp = sharpieContainer.dataset.sharpieWarp;\n\n  return {pos: +rawPos, warp: rawWarp ? +rawWarp : 1};\n}\n\n/**\n * Translate the given selection range to positions within the raw text.\n *\n * This function takes into account different annotations that may shrink or\n * stretch the underlying character count in various ways.\n */\nfunction getSharpieExtent(range: Range) {\n  const startMeta = getSharpieOffset(range.startContainer);\n  const endMeta = getSharpieOffset(range.endContainer);\n  const start = startMeta.pos + range.startOffset * startMeta.warp;\n  const end = endMeta.pos + range.endOffset * endMeta.warp;\n  return [Math.floor(start), Math.ceil(end)];\n}\n\n/**\n * Global event handler that processes selections on mouse events.\n */\nfunction delegate() {\n  const selection = window.getSelection();\n\n  if (selection.isCollapsed) {\n    _debug(\"Ignoring collapsed selection\");\n    return;\n  }\n\n  const callbacks = resolveHandlers(selection);\n  if (!callbacks) {\n    _debug(\"Ignoring selection due to overflow\");\n    return;\n  }\n\n  for (let i = 0; i < selection.rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n    if (range.collapsed) {\n      _debug(\"Ignoring collapsed range\");\n      continue;\n    }\n    const extent = getSharpieExtent(range);\n    for (const cb of callbacks) {\n      cb(extent);\n    }\n  }\n}\n\n/**\n * Set up global selection event handling (idempotent).\n */\nlet init = false;\nfunction initialize() {\n  if (init) {\n    return;\n  }\n  window.addEventListener(\"mouseup\", delegate);\n  init = true;\n}\n\n/**\n * Handle text selections within the given element.\n */\nexport function watch(element: HTMLElement, handler: Function) {\n  initialize();\n  if (!watchList.has(element)) {\n    watchList.set(element, new Set());\n  }\n  watchList.get(element).add(handler);\n}\n\n/**\n * Stop watching selection events on the given element.\n *\n * Pass a handler explicitly to only remove the specified callback.\n *\n * Returns a boolean indicating whether cleanup was successful.\n */\nexport function unwatch(element: HTMLElement, handler?: Function) {\n  if (handler) {\n    const list = watchList.get(element);\n    if (!list) {\n      return false;\n    }\n    if (!list.has(handler)) {\n      return false;\n    }\n    list.delete(handler);\n    return true;\n  }\n\n  if (!watchList.has(element)) {\n    return false;\n  }\n  watchList.delete(element);\n  return true;\n}\n","import {Annotation, Markup, Redaction, StyleAttributes} from \"./annotation\";\nimport {defaults, _debug, _error, sortedInsert} from \"./util\";\n\n/**\n * Options to control how annotations are rendered onto text.\n */\nexport interface RenderOpts {\n  autoParagraph?: boolean;\n}\n\n/**\n * Internal object tracking state of redactions during output.\n */\ninterface RedactionMeta {\n  redaction: Redaction;\n  output: string[];\n  extent: number;\n  cursor: number;\n}\n\n/**\n * Internal object tracking state of annotations during opening.\n */\ninterface Opening {\n  annotation: Annotation;\n  tagName: string;\n  part: number;\n  redaction?: RedactionMeta;\n}\n\n/**\n * Internal object tracking state of opened tags.\n */\ninterface OpenedTagMeta {\n  annotation: Annotation;\n  start: number;\n  end: number;\n  part: number;\n  id: string;\n  warp: number;\n  outputOffsetPos: number;\n}\n\n/**\n * HTML block tags\n */\nconst BLOCK_TAGS = new Set([\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"blockquote\",\n  \"details\",\n  \"dialog\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"li\",\n  \"main\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"pre\",\n  \"section\",\n  \"table\",\n  \"ul\",\n  ]);\n\n/**\n * Sort the tags of simultaneously opening annotations.\n *\n * The sort order should:\n *  1) be valid HTML;\n *  2) preserve semantics of input annotations, and\n *  3) look good\n */\nfunction sortOpenings(a: Opening, b: Opening) {\n  const aType = a.annotation.type;\n  const bType = b.annotation.type;\n  const aTag = a.tagName.toLowerCase();\n  const bTag = b.tagName.toLowerCase();\n\n  // Always sort paragraph tags on the outside\n  if (aTag === \"p\") {\n    return -1;\n  } else if (bTag === \"p\") {\n    return 1;\n  }\n\n  // Sort highlights on the inside so they are visible\n  if (aType !== bType) {\n    if (aType === \"highlight\") {\n      return 1;\n    } else if (bType === \"highlight\") {\n      return -1;\n    }\n  }\n\n  // Sort block tags on the outside\n  if (BLOCK_TAGS.has(aTag)) {\n    return -1;\n  } else if (BLOCK_TAGS.has(bTag)) {\n    return 1;\n  }\n\n  // Lacking other conditions, preserve the input order.\n  return -1;\n}\n\n/**\n * Put annotations in a reasonable order for processing.\n */\nfunction sortAnnotations(a: Annotation, b: Annotation): number {\n  if (a.start === b.start) {\n    // Sort the element that will end first after (i.e., inside)\n    return a.end < b.end ? 1 : -1;\n  }\n  return a.start < b.start ? -1 : 1;\n}\n\n/**\n * Create a dummy annotation representing an HTML paragraph span.\n */\nfunction createParagraphAnnotation(start: number, end: number): Markup {\n  return {\n    start,\n    end,\n    type: \"markup\",\n    meta: {\n      htmlTagName: \"p\",\n      htmlClassName: \"auto-para-break\",\n    },\n  };\n}\n\n/**\n * Map from Sharpie format property names to their CSS equivalents.\n */\nconst STYLE_TO_CSS = {\n  \"font\": \"font-family\",\n  \"fontSize\": \"font-size\",\n  \"color\": \"color\",\n  \"bgColor\": \"background-color\",\n  \"opacity\": \"opacity\",\n};\n\n/**\n * Convert the Sharpie format options to CSS.\n *\n * The input object should include standard StyleAttributes keys, but any\n * additional keys will be treated as literal CSS keys.\n */\nfunction createStyleString(style: StyleAttributes) {\n  const styles = Object.keys(style).map((key: keyof StyleAttributes) => {\n    const value = style[key];\n    const cssKey = STYLE_TO_CSS[key] || key;\n    return `${cssKey}: ${value}`;\n  });\n\n  if (!styles.length) {\n    return \"\";\n  }\n\n  return styles.join(\"; \") + \";\";\n}\n\n/**\n * Add paragraph break annotations to a piece of text.\n */\nfunction inferParagraphBreaks(text: string): Markup[] {\n  const annotations: Markup[] = [];\n  const breakPattern = /\\n/g;\n  let lastPoint = 0;\n\n  // Add paragraph annotations wherever there's a newline\n  let br: RegExpExecArray | null = null;\n  while ((br = breakPattern.exec(text)) !== null) {\n    annotations.push(createParagraphAnnotation(lastPoint, br.index));\n    lastPoint = br.index;\n  }\n\n  // Push at least one annotation that closes at the end of the text.\n  annotations.push(createParagraphAnnotation(lastPoint, text.length));\n\n  return annotations;\n}\n\n/**\n * Get the HTML tag name to use for the given annotation.\n */\nfunction getTagName(annotation: Annotation, defaultTag: string = \"span\") {\n  if (annotation.meta && annotation.meta.htmlTagName) {\n    return annotation.meta.htmlTagName.toLowerCase();\n  }\n  return defaultTag.toLowerCase();\n}\n\n/**\n * Get an object used to generated styles.\n *\n * A default object is defined for each type, which the annotation itself may\n * override when it is defined.\n */\nfunction getFormatObject(annotation: Annotation): Object {\n  const overrides = annotation.format;\n  switch (annotation.type) {\n    case \"redaction\":\n      return {\n        \"white-space\": \"pre-wrap\",\n        \"word-break\": \"break-word\",\n        ...overrides\n      };\n    default:\n      return {...overrides};\n  }\n}\n\n/**\n * Generate opening tag string for the annotation.\n */\nfunction openTag(annotation: Annotation, annotationId: string, part: number): string {\n  const tagName = getTagName(annotation);\n  const attrs: Array<[string, string]> = [];\n\n  // Inline styles\n  const format = getFormatObject(annotation);\n  if (format) {\n    const styleString = createStyleString(format);\n    if (styleString) {\n      attrs.push([\"style\", createStyleString(format)]);\n    }\n  }\n\n  // ID attribute\n  if (annotation.meta && annotation.meta.id) {\n    attrs.push([\"id\", annotation.meta.id]);\n  }\n\n  // className string\n  const cls = [\"sharpie-annotation\", `sharpie-type-${annotation.type}`];\n  if (annotation.meta && annotation.meta.htmlClassName) {\n    cls.push(annotation.meta.htmlClassName);\n  }\n  attrs.push([\"class\", cls.join(\" \")]);\n\n  // Write the metadata ID so that it can be replaced later with data\n  // attributes once they are all known.\n  const metaDataId = getMetaDataId(annotationId, part);\n  const attrString = attrs.map(([k, v]) => `${k}=\"${v}\"`).join(\" \");\n  return `<${tagName} ${metaDataId}${attrString ? \" \" + attrString : \"\"}>`;\n}\n\n/**\n * Generate closing tag string for the annotation.\n */\nfunction closeTag(annotation: Annotation, defaultTag?: string): string {\n  const tagName = getTagName(annotation, defaultTag);\n  return `</${tagName}>`;\n}\n\n/**\n * Create a buffer of the given text string of the given length.\n *\n * Each character within the text string will occupy a slot in the buffer. The\n * space character is used to pad before and after the text string until the\n * buffer is of the length specified by `width`.\n *\n * Some behavior of this function may be unexpected:\n *\n * 1) If text is greater than the designated width, it is returned directly.\n * 2) The padding character is treated as a single character regardless of\n *    its literal string length in JavaScript. This is so that HTML markup\n *    can be passed; the screen representation should still be a single\n *    character of text regardless.\n */\nfunction createPaddedOutputBuffer(text: string | undefined, width: number, paddingChar: string) {\n  text = text || \"\";\n  const textLength = text.length;\n\n  const length = Math.max(textLength, width);\n  const delta = width - textLength;\n  const lWidth = delta >> 1;\n  const rWidth = delta - lWidth;\n\n  const buf = new Array<string>(length);\n\n  let cursor = 0;\n  for (let i = 0; i < lWidth; i++) {\n    buf[cursor++] = paddingChar;\n  }\n\n  for (let i = 0; i < textLength; i++) {\n    buf[cursor++] = text[i];\n  }\n\n  for (let i = 0; i < rWidth; i++) {\n    buf[cursor++] = paddingChar;\n  }\n\n  return buf;\n}\n\n/**\n * Test whether a parent annotation can safely contain the given child.\n *\n * E.g., inline elements cannot contain block elements.\n */\nfunction canContain(ancestor: Annotation, child: Annotation) {\n  const ancestorTag = getTagName(ancestor);\n  const childTag = getTagName(child);\n\n  // Force inline tags to reopen within block tags.\n  if (BLOCK_TAGS.has(childTag) && !BLOCK_TAGS.has(ancestorTag)) {\n    _debug(\"Forcing inline reopen:\", ancestorTag, \"cannot contain\", childTag);\n    return false;\n  }\n\n  // Force highlights to reopen within redactions for aesthetic reasons.\n  if (child.type === \"redaction\" && ancestor.type === \"highlight\") {\n    _debug(\"Forcing highlight reopen: containing redaction\");\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Create a unique slug for this node's annotation and sequence number.\n */\nfunction getMetaDataId(annotationId: string, part: number) {\n  return `__metadata_${annotationId}_${part}__`;\n}\n\n/**\n * Write metadata for every HTML node into the data attributes.\n */\nfunction writeMetaData(text: string, meta: Map<string, OpenedTagMeta>) {\n  for (const [id, data] of meta) {\n    const attrs = [\n      `data-sharpie-start=\"${data.start}\"`,\n      `data-sharpie-end=\"${data.end}\"`,\n      `data-sharpie-warp=\"${data.warp}\"`,\n      `data-sharpie-id=\"${data.id}\"`,\n    ].join(\" \");\n\n    // Cut the text at the offset where the opening tag starts to ensure that\n    // replacement only matches the right placeholder.\n    // TODO(jnu): could optimize by processing in appearance order\n    const preamble = text.substring(0, data.outputOffsetPos);\n    const postamble = text.substring(data.outputOffsetPos).replace(id, attrs);\n    text = preamble + postamble;\n  }\n\n  return text;\n}\n\n/**\n * Render the given text into a string of HTML.\n */\nexport function renderToString(text: string, annotations: Annotation[], opts?: RenderOpts): string {\n  opts = defaults(opts, {autoParagraph: true});\n  let inferred: Annotation[] = [];\n\n  if (opts.autoParagraph) {\n    _debug(\"Generating HTML paragraph break annotations\");\n    inferred = inferParagraphBreaks(text);\n  }\n\n  const ids = new WeakMap<Annotation, string>();\n  const warpMap = new WeakMap<Annotation, number>();\n  // Create IDs based on the annotation input order. This lets other code\n  // build on top of the markup and interact with annotations.\n  annotations.forEach((atn, i) => ids.set(atn, `${i}`));\n  inferred.forEach((atn, i) => ids.set(atn, `inferred-${i}`));\n\n  // Queue for annotations to apply\n  const sorted = [...annotations, ...inferred].sort(sortAnnotations);\n  // Stack of annotations that have been opened\n  const openOrderStack: OpenedTagMeta[] = [];\n  // Annotations stack ordered by end position. This is used to detect\n  // annotations that have overlapping extents. When the extents overlap, close\n  // and reopen the tags to generate valid HTML.\n  const endOrderStack: Annotation[] = [];\n  // Stack of overlapping tags that need to be reopened.\n  const reopen: OpenedTagMeta[] = [];\n  // Stack of open redactions and their state.\n  const openRedactions: RedactionMeta[] = [];\n  // Cache of meta data for every tag written\n  const nodeMetaCache = new Map<string, OpenedTagMeta>();\n\n  // Generated output string (HTML)\n  let output = \"\";\n\n  for (let pointer = 0; pointer <= text.length; pointer++) {\n    // Write any tags that are closing at this position\n    while (endOrderStack.length > 0 && endOrderStack[0].end === pointer) {\n      const endTag = endOrderStack[0];\n      // Write closing tags for every tag that overlaps this one\n      while (openOrderStack.length > 0) {\n        const openedAfter = openOrderStack.shift();\n        output += closeTag(openedAfter.annotation);\n        nodeMetaCache.get(getMetaDataId(openedAfter.id, openedAfter.part)).end = pointer;\n\n        // Ensure any tag closing at this position is removed from the end\n        // order stack.\n        let i = 0;\n        while (i < endOrderStack.length) {\n          const candidate = endOrderStack[i];\n          if (candidate.end > pointer) {\n            break;\n          }\n          if (candidate === openedAfter.annotation) {\n            endOrderStack.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n\n        // Break out of the loop when the real tag to close is found.\n        if (endTag === openedAfter.annotation) {\n          break;\n        }\n\n        // Reopen any tags that continue beyond this one\n        // NOTE: there may be annotations processed at this step that end at\n        // the same position and should not be reopened.\n        if (openedAfter.annotation.end > pointer) {\n          reopen.unshift({\n            annotation: openedAfter.annotation,\n            id: openedAfter.id,\n            part: openedAfter.part + 1,\n            start: pointer,\n            end: -1,\n            outputOffsetPos: -1,\n            warp: -1,\n          });\n        }\n      }\n    }\n\n    // A queue for all tags being opened at this position (whether it's for\n    // a new tag or a reopened tag). This queue will be sorted in priority\n    // order for opening.\n    const openingQueue: Opening[] = [];\n\n    // Process newly opening tags\n    while (sorted.length > 0 && sorted[0].start === pointer) {\n      const atn = sorted.shift();\n      if (atn.end <= atn.start) {\n        _debug(\"Ignoring invalid annotation range\", atn.start, atn.end);\n        continue;\n      }\n      const tagName = getTagName(atn);\n\n      // Find the outermost container that cannot safely contain the new child.\n      let invalidContainerIndex = -1;\n      for (let i = openOrderStack.length - 1; i >= 0; i--) {\n        if (!canContain(openOrderStack[i].annotation, atn)) {\n          invalidContainerIndex = i;\n          break;\n        }\n      }\n\n      // Everything up until the last invalid container needs to be closed and\n      // reopened.\n      for (let i = 0; i <= invalidContainerIndex; i++) {\n        const openedBefore = openOrderStack.shift();\n        output += closeTag(openedBefore.annotation);\n        nodeMetaCache.get(getMetaDataId(openedBefore.id, openedBefore.part)).end = pointer;\n\n        reopen.unshift({\n          annotation: openedBefore.annotation,\n          id: openedBefore.id,\n          part: openedBefore.part + 1,\n          start: pointer,\n          end: -1,\n          outputOffsetPos: -1,\n          warp: -1,\n        });\n\n        i++;\n      }\n\n      // Warp represents the number of characters in the real text are\n      // represented by one character of output text in this range. It's added\n      // so libraries operating on annotated text can compute positions\n      // correctly despite annotation that may have altered the surface text.\n      let warp = 1;\n      let redaction: RedactionMeta | undefined;\n\n      // Construct a new redaction object and compute warp factor as necessary\n      if (atn.type === \"redaction\") {\n        // Choose the effective redaction width by taking the explicitly\n        // defined extent if there is one, or the max of the annotation span\n        // and the redaction content length if not.\n        const annotationExtent = atn.end - atn.start;\n        const extent = atn.extent ?\n          atn.extent :\n          Math.max(annotationExtent, (atn.content || \"\").length);\n        redaction = {\n          redaction: atn,\n          output: createPaddedOutputBuffer(atn.content, extent, \"&nbsp;\"),\n          extent,\n          cursor: 0,\n        };\n        // Compute warp factor: redactions can alter screen text length\n        warp = annotationExtent / extent;\n      }\n\n      // Save metadata\n      warpMap.set(atn, warp);\n\n      openingQueue.push({\n        annotation: atn,\n        tagName,\n        redaction,\n        part: 0,\n      });\n    }\n\n    // Process re-opening tags\n    while (reopen.length > 0) {\n      const node = reopen.shift();\n      openingQueue.push({\n        annotation: node.annotation,\n        tagName: getTagName(node.annotation),\n        part: node.part,\n      });\n    }\n\n    // Write out all opening tags in the correct order\n    openingQueue.sort(sortOpenings);\n    while (openingQueue.length > 0) {\n      const opening = openingQueue.shift();\n      const atn = opening.annotation;\n\n      // For novel tags, add them to other stacks\n      if (opening.part === 0) {\n        sortedInsert(endOrderStack, atn, a => a.end);\n        if (opening.redaction) {\n          openRedactions.unshift(opening.redaction);\n        }\n      }\n\n      const opened = {\n        annotation: atn,\n        id: ids.get(atn),\n        part: opening.part,\n        start: pointer,\n        end: -1,\n        warp: warpMap.get(atn),\n        outputOffsetPos: output.length,\n      };\n\n      // Write open tag\n      output += openTag(atn, ids.get(atn), opening.part);\n      const metaDataId = getMetaDataId(opened.id, opened.part);\n      if (nodeMetaCache.has(metaDataId)) {\n        _error(\"Overwriting node metadata\", metaDataId);\n      }\n      nodeMetaCache.set(metaDataId, opened);\n      openOrderStack.unshift(opened);\n    }\n\n    // Clean up closing redactions\n    while (openRedactions.length && openRedactions[0].redaction.end === pointer) {\n      openRedactions.shift();\n    }\n\n    // Process open redaction annotations.\n    for (let i = 0; i < openRedactions.length; i++) {\n      const atn = openRedactions[i];\n\n      // Calculate the new cursor position within this annotation\n      let cursor = atn.cursor;\n      const pct = (1 + pointer - atn.redaction.start) / (atn.redaction.end - atn.redaction.start);\n      const rawPos = pct * atn.extent;\n      atn.cursor = Math.floor(rawPos);\n      // Only write the top-most redaction, and only when the cursor moved.\n      const needsWrite = i === 0 && atn.cursor > cursor;\n\n      // Write anything between the old cursor and the new cursor position.\n      // This lets us write redactions with content longer than the span it\n      // is technically redacting.\n      while (needsWrite && cursor < atn.cursor) {\n        output += atn.output[cursor++];\n      }\n    }\n\n    // If the underlying text is not actively being  redacted, write it.\n    if (openRedactions.length === 0) {\n      output += text[pointer] || \"\";\n    }\n  }\n\n  // Ta-da!\n  return writeMetaData(output, nodeMetaCache);\n}\n\n/**\n * Render annotated text as plain HTML into the given DOM container.\n */\nexport function render(container: HTMLElement, text: string, annotations: Annotation[]) {\n  const start = Date.now();\n  const html = renderToString(text, annotations);\n  _debug(\"Rendered in\", Date.now() - start, \"ms\");\n  container.innerHTML = html;\n}\n","export {watch, unwatch} from \"./highlight\";\nexport {render as renderHTML, renderToString} from \"./html\";\n","/**\n * Output debug message.\n */\nexport const _debug = (...args: {}[]) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    // tslint:disable-next-line:no-console\n    console.debug(...args);\n  }\n};\n\n/**\n * Output error message.\n */\nexport const _error = (...args: {}[]) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    // tslint:disable-next-line:no-console\n    console.error(...args);\n  }\n};\n\n/**\n * Supply default properties where they are missing to an object.\n */\nexport const defaults = <T>(o: T | undefined, d: T): T => {\n  if (!o) {\n    return {...d};\n  }\n  return {...d, ...o};\n};\n\n/**\n * The identity function.\n */\nexport const identity = <T>(x: T) => x;\n\n/**\n * Insert an element into an array, keeping items sorted.\n *\n * Optionally supply a key function to sort by.\n */\nexport const sortedInsert = <T, U>(A: T[], x: T, key: (a: T) => T|U = identity) => {\n  const val = key(x);\n  if (A.length === 0) {\n    A.push(x);\n    return;\n  }\n\n  let low = 0;\n  let high = A.length;\n\n  while (high - low > 1) {\n    const mid = low + ((high - low) >> 1);\n    const cmp = key(A[mid]);\n    if (val < cmp) {\n      high = mid;\n    } else {\n      low = mid;\n    }\n  }\n\n  const index = val <= key(A[low]) ? low : high;\n  A.splice(index, 0, x);\n};\n"],"sourceRoot":""}